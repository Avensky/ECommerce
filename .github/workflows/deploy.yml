name: Continous Deployment (CD)

on:
  workflow_run:
    workflows: ["Continous Integration (CI)"]
    #Execute the workflow once the CI workflow is completed on main branch
    types: [completed]
    branches:
      -main

jobs: 
  backendTesting:
    # Define runner
    runs-on: self-hosted

    steps:
    - name: Checkout to the repository
      uses: actions/checkout@v3

    - name: Set up NodeJS environment
      uses: actions/setup-node@v3
      with:
        node-version: 19.2.0

    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{runner.os}}-backendTesting-${{ env.cache.name }}-${{ hashFiles('**/package-lock.json')}}
        restore-keys: |
          ${{ runner.os }}-backendTesting-${{ env.cache-name }}-
          ${{ runner.os }}-backendTesting-
          ${{ runner.os }}-

    - name: Install dependencies
      if: steps.cache-backend-nodemodules.outputs.cache != 'true'
      run: npm ci

    - name: Check lint formatting
      run: npm run lint

    - name: Run tests
      run: echo testing...

  getFrontend:
    needs: backendTesting
    runs-on: self-hosted
    steps:
    - name: Get Code
      uses: actions/checkout@v3
    - name: Use Node
      uses: actions/setup-node@v3
      with:
        node-version: 19.2.0
    - run: |
        cd frontend
        npm i
        npm run lint
  buildProd:
    needs: getFrontend
    runs-on: self-hosted
    steps:
    - name: Get Code
      uses: actions/checkout@v3
    - name: Use Node
      uses: actions/setup-node@v3
      with:
        node-version: 19.2.0
    - run: |
        npm i
        cd frontend
        npm i
        npm run build
  restartServer:
    needs: buildProd
    runs-on: self-hosted
    steps:
    - run: |
        pm2 stop 0
        pm2 start 0
        pm2 save
        sudo service nginx restart